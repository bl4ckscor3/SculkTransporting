plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'net.neoforged.gradle.userdev' version '[7.0,7.1)'
//	id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = '1.1.3'
group = 'sculktransporting'

base {
	archivesName = 'sculktransporting-1.20.2'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    configureEach {
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        workingDirectory project.file('run/client')
    }

    server {
        workingDirectory project.file('run/server')
        programArgument '-nogui'
    }
	
	data {
		workingDirectory project.file('run/data')
		programArguments.addAll '--mod', 'sculktransporting', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
	}
}

repositories {
    maven {
        url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    implementation 'net.neoforged:neoforge:20.2.47-beta'
	//implementation "curse.maven:patchouli-306770:4636277"
}

sourceSets.main.resources {
	srcDir 'src/generated/resources'
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": project.name,
                "Specification-Vendor": "bl4ckscor3, Redstone_Dubstep",
                "Specification-Version": project.jar.archiveVersion,
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": "bl4ckscor3, Redstone_Dubstep"
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
